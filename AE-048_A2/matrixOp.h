/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MATRIXOP_H_RPCGEN
#define _MATRIXOP_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>


struct Matrix {
	int numOfRows;
	int numOfCols;
	float data[1000];
};
typedef struct Matrix Matrix;
#ifdef __cplusplus
extern "C" bool_t xdr_Matrix(XDR *, Matrix*);
#elif __STDC__
extern  bool_t xdr_Matrix(XDR *, Matrix*);
#else /* Old Style C */
bool_t xdr_Matrix();
#endif /* Old Style C */


struct Input {
	int numOfMatrices;
	Matrix matrices[2];
};
typedef struct Input Input;
#ifdef __cplusplus
extern "C" bool_t xdr_Input(XDR *, Input*);
#elif __STDC__
extern  bool_t xdr_Input(XDR *, Input*);
#else /* Old Style C */
bool_t xdr_Input();
#endif /* Old Style C */


struct Output {
	Matrix result;
	int errorCode;
	char errorMessage[50];
};
typedef struct Output Output;
#ifdef __cplusplus
extern "C" bool_t xdr_Output(XDR *, Output*);
#elif __STDC__
extern  bool_t xdr_Output(XDR *, Output*);
#else /* Old Style C */
bool_t xdr_Output();
#endif /* Old Style C */


#define MATRIX_OPERATIONS ((rpc_uint)0x4562877)
#define MATRIX_VERSION ((rpc_uint)1)

#ifdef __cplusplus
#define add ((rpc_uint)1)
extern "C" Output * add_1(Input *, CLIENT *);
extern "C" Output * add_1_svc(Input *, struct svc_req *);
#define multiply ((rpc_uint)2)
extern "C" Output * multiply_1(Input *, CLIENT *);
extern "C" Output * multiply_1_svc(Input *, struct svc_req *);
#define inverse ((rpc_uint)3)
extern "C" Output * inverse_1(Input *, CLIENT *);
extern "C" Output * inverse_1_svc(Input *, struct svc_req *);
#define transpose ((rpc_uint)4)
extern "C" Output * transpose_1(Input *, CLIENT *);
extern "C" Output * transpose_1_svc(Input *, struct svc_req *);

#elif __STDC__
#define add ((rpc_uint)1)
extern  Output * add_1(Input *, CLIENT *);
extern  Output * add_1_svc(Input *, struct svc_req *);
#define multiply ((rpc_uint)2)
extern  Output * multiply_1(Input *, CLIENT *);
extern  Output * multiply_1_svc(Input *, struct svc_req *);
#define inverse ((rpc_uint)3)
extern  Output * inverse_1(Input *, CLIENT *);
extern  Output * inverse_1_svc(Input *, struct svc_req *);
#define transpose ((rpc_uint)4)
extern  Output * transpose_1(Input *, CLIENT *);
extern  Output * transpose_1_svc(Input *, struct svc_req *);

#else /* Old Style C */
#define add ((rpc_uint)1)
extern  Output * add_1();
extern  Output * add_1_svc();
#define multiply ((rpc_uint)2)
extern  Output * multiply_1();
extern  Output * multiply_1_svc();
#define inverse ((rpc_uint)3)
extern  Output * inverse_1();
extern  Output * inverse_1_svc();
#define transpose ((rpc_uint)4)
extern  Output * transpose_1();
extern  Output * transpose_1_svc();
#endif /* Old Style C */

#endif /* !_MATRIXOP_H_RPCGEN */
